{% if node_type_keys is arista.avd.defined %}
{%  set node_types = node_type_keys | map(attribute="type") %}
{% else %}
{%  set default_node_types = {
      "l3ls-evpn": ["spine", "l3leaf", "l2leaf", "super-spine", "overlay-controller", "back-bone"],
      "mpls": ["p", "pe", "rr"],
      "l2ls": ["l3spine", "spine", "leaf"]
    } %}
{%  set node_types = default_node_types[design.type | arista.avd.default("l3ls-evpn")] %}
{% endif %}


# Global parameters for different node types
veos:
  username: {{ act_veos_username }}
  password: {{ act_veos_password }}
  version: {{ veos_version }}

{% if act_add_ansible_node %}
generic:
  username: {{ act_generic_user }}
  password: {{ act_generic_password }}
  version: {{ act_generic_os_version }}
{% endif %}

{% if act_add_cvp %}
cvp:
  username: {{ act_cvp_user }}
  password: {{ act_cvp_password }}
  version: {{ act_cvp_version }}
  instance: {{ act_cvp_instance_type }}
{% endif %}

# List of ACT nodes
nodes:
{% for node in groups[fabric_name] | arista.avd.natural_sort %}
{%  set node_hostvars = hostvars[node] %}
{%    if node_hostvars.type | arista.avd.default('undefined') in node_types %}
  - {{ node }}:
      ip_addr: {{ node_hostvars.ansible_host }}
      node_type: veos
      version: {{ veos_version }}
{%    endif %}
{% endfor %}
{#
{% if non_fabric_nodes %}
  {{ non_fabric_nodes | to_nice_yaml(indent=2) | indent(2) }}
{% endif %}
#}
{% if act_add_cvp %}
  - act-cv:
      ip_addr: {{ act_cvp_ip }}
      node_type: cvp
{% if cvp_auto_configuration %}
      auto_configuration: true
{% endif %}
{% endif %}
{% if act_add_ansible_node %}
  - tool-server:
      ip_addr: {{ act_ansible_node_ip }}
      node_type: generic
{% endif %}
links:
{% set rendered_connections = [] %}
{% for node in groups[fabric_name] | arista.avd.natural_sort %}
{%  set node_hostvars = hostvars[node] %}
{%  for ethernet_interface in node_hostvars.ethernet_interfaces | arista.avd.natural_sort("name") %}
{%    set valid_types = node_types + ['mlag_peer'] %}
{%    if connected_endpoints %}
{%      set valid_types = valid_types + ['server'] %}
{%    endif %}
{%    if ethernet_interface.peer_type | arista.avd.default('undefined') in valid_types %}
{%      set peer = ethernet_interface.peer %}
{%      set peer_interface = ethernet_interface.peer_interface %}
{%      set connection_string = node ~ ":" ~ ethernet_interface.name ~ "," ~ peer ~ ":" ~ peer_interface %}
{%      set reverse_connection_string = peer ~ ":" ~ peer_interface ~ "," ~ node ~ ":" ~ ethernet_interface.name %}
{%      if not (connection_string in rendered_connections or reverse_connection_string in rendered_connections) %}
    - connection:
        - {{ node }}:{{ ethernet_interface.name }}
        - {{ peer }}:{{ peer_interface }}
{%    set _ = rendered_connections.append(connection_string) %}
{%      endif %}
{%    endif %}
{%  endfor %}
{% endfor %}
